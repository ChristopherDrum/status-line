pico-8 cartridge // http://www.pico-8.com
version 42
__lua__

zchar_map_str = [[
	00, 00, 00, 00, 05, 00, 00, 00, 00, 07,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
    00, 32, 20, 25, 23, 00, 00, 00, 24, 30,
    31, 00, 00, 19, 28, 18, 26, 00, 01, 02,
    03, 04, 05, 06, 07, 08, 09, 29, 00, 00,
    00, 00, 21, 00, 06, 07, 08, 09, 10, 11,
    12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
    22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
    00, 27, 00, 00, 22, 00, 06, 07, 08, 09,
    10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
    20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
    30, 31
]]
zchar_map = split(zchar_map_str)
punc = '.,!?_#\'"/\\-:()'
function in_set(val, set)
	if (not val or not set) return
	set = split(set,1)
	return del(set,val) == val
end

max_words = 2
function convert(str)
    local zwords, word, count = {}, 0, 1

    local function commit(v)
        word = (word << 5) | v
        if count % 3 == 0 then
            add(zwords, word)
            word = 0
        end
        count += 1
    end

    for i = 1, max_words*3 do
        local o = ord(str[i]) or 5
        if mid(65, o, 90) == o then 
            commit(4)
        elseif o == 10 or
               mid(48, o, 57) == o or
               in_set(str[i], punc) then
            commit(5)
        end
        commit(zchar_map[o])

        if (#zwords >= max_words) break
    end

    zwords[#zwords] |= 0x8000 -- set bit flag for end of zstring
    return zwords
end

local zwords = convert("yes?")
comp = {}
for i = 1, #zwords do
	print(zwords[i])
end
for j = 1, #zwords do
	print(tostr(zwords[j],true))
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
